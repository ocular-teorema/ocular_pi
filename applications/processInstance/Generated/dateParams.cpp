/**
 * \file dateParams.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include <vector>
#include <stddef.h>
#include "dateParams.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
template<>
Reflection BaseReflection<DateParams>::reflection = Reflection();
template<>
int BaseReflection<DateParams>::dummy = DateParams::staticInit();
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN

int DateParams::staticInit()
{

    ReflectionNaming &nameing = naming();
    nameing = ReflectionNaming(
        "Date Params",
        "Date Params",
        ""
    );
     

    fields().push_back(
        new BoolField
        (
          DateParams::USE_VIRTUAL_DATE_ID,
          offsetof(DateParams, mUseVirtualDate),
          false,
          "Use virtual date",
          "Use virtual date",
          "Use virtual date"
        )
    );
    fields().push_back(
        new IntField
        (
          DateParams::YEAR_ID,
          offsetof(DateParams, mYear),
          2016,
          "Year",
          "Year",
          "Year",
          true,
         1970,
         99999
        )
    );
    fields().push_back(
        new IntField
        (
          DateParams::MONTH_ID,
          offsetof(DateParams, mMonth),
          6,
          "Month",
          "Month",
          "Month",
          true,
         1,
         12
        )
    );
    fields().push_back(
        new IntField
        (
          DateParams::DAY_ID,
          offsetof(DateParams, mDay),
          1,
          "Day",
          "Day",
          "Day",
          true,
         1,
         31
        )
    );
    fields().push_back(
        new IntField
        (
          DateParams::HOUR_ID,
          offsetof(DateParams, mHour),
          12,
          "Hour",
          "Hour",
          "Hour",
          true,
         0,
         23
        )
    );
    fields().push_back(
        new IntField
        (
          DateParams::MINUTE_ID,
          offsetof(DateParams, mMinute),
          0,
          "Minute",
          "Minute",
          "Minute",
          true,
         0,
         59
        )
    );
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


