/**
 * \file graphPlotParameters.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include <vector>
#include <stddef.h>
#include "graphPlotParameters.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
template<>
Reflection BaseReflection<GraphPlotParameters>::reflection = Reflection();
template<>
int BaseReflection<GraphPlotParameters>::dummy = GraphPlotParameters::staticInit();
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN

int GraphPlotParameters::staticInit()
{

    ReflectionNaming &nameing = naming();
    nameing = ReflectionNaming(
        "Graph Plot Parameters",
        "Graph Plot Parameters",
        ""
    );
     

    fields().push_back(
        new EnumField
        (
          GraphPlotParameters::GRAPHSTYLE_ID,
          offsetof(GraphPlotParameters, mGraphStyle),
          0,
          "graphStyle",
          "graphStyle",
          "graphStyle",
          new EnumReflection(2
          , new EnumOption(0,"Draw Lines")
          , new EnumOption(1,"Draw Dots")
          )
        )
    );
    fields().push_back(
        new IntField
        (
          GraphPlotParameters::WIDTH_ID,
          offsetof(GraphPlotParameters, mWidth),
          1,
          "width",
          "width",
          "width",
          true,
         1,
         99
        )
    );
    fields().push_back(
        new DoubleField
        (
          GraphPlotParameters::CENTERAT_ID,
          offsetof(GraphPlotParameters, mCenterAt),
          0,
          "centerAt",
          "centerAt",
          "centerAt",
          true,
         -9999,
         9999.99
        )
    );
    fields().push_back(
        new BoolField
        (
          GraphPlotParameters::XGRID_ID,
          offsetof(GraphPlotParameters, mXGrid),
          false,
          "xGrid",
          "xGrid",
          "xGrid"
        )
    );
    fields().push_back(
        new BoolField
        (
          GraphPlotParameters::YGRID_ID,
          offsetof(GraphPlotParameters, mYGrid),
          false,
          "yGrid",
          "yGrid",
          "yGrid"
        )
    );
    fields().push_back(
        new DoubleField
        (
          GraphPlotParameters::XSCALE_ID,
          offsetof(GraphPlotParameters, mXScale),
          1,
          "xScale",
          "xScale",
          "xScale"
        )
    );
    fields().push_back(
        new DoubleField
        (
          GraphPlotParameters::YSCALE_ID,
          offsetof(GraphPlotParameters, mYScale),
          1,
          "yScale",
          "yScale",
          "yScale",
          true,
         0,
         1000
        )
    );
    fields().push_back(
        new DoubleField
        (
          GraphPlotParameters::CONTRAST_ID,
          offsetof(GraphPlotParameters, mContrast),
          50,
          "contrast",
          "contrast",
          "contrast",
          true,
         0,
         100
        )
    );
    fields().push_back(
        new BoolField
        (
          GraphPlotParameters::SELECTGRAPH_ID,
          offsetof(GraphPlotParameters, mSelectGraph),
          false,
          "selectGraph",
          "selectGraph",
          "selectGraph"
        )
    );
    fields().push_back(
        new BoolField
        (
          GraphPlotParameters::FIX_TIME_VALUE_ID,
          offsetof(GraphPlotParameters, mFixTimeValue),
          false,
          "Fix Time value",
          "Fix Time value",
          "Fix Time value"
        )
    );
    fields().push_back(
        new BoolField
        (
          GraphPlotParameters::FIX_GRID_VALUE_ID,
          offsetof(GraphPlotParameters, mFixGridValue),
          true,
          "Fix Grid value",
          "Fix Grid value",
          "Fix Grid value"
        )
    );
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


