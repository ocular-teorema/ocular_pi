/**
 * \file checkerboardDetectionParametersControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "checkerboardDetectionParametersControlWidget.h"
#include "ui_checkerboardDetectionParametersControlWidget.h"
#include "qSettingsGetter.h"
#include "qSettingsSetter.h"


CheckerboardDetectionParametersControlWidget::CheckerboardDetectionParametersControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::CheckerboardDetectionParametersControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->estimateUndistortedFromDistortedCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->useUndistortionCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->algorithmComboBox, SIGNAL(currentIndexChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->channelComboBox, SIGNAL(currentIndexChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->cellSizeHorSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->cellSizeVertSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->cleanExistingCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->preciseDiameterSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->iterationCountSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->minAccuracySpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->partialBoardCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->fastBoardSpeedupCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->drawSGFsOnBoardsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->skipUndistortedWithNoDistortedBoardCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
}

CheckerboardDetectionParametersControlWidget::~CheckerboardDetectionParametersControlWidget()
{

    delete mUi;
}

void CheckerboardDetectionParametersControlWidget::loadParamWidget(WidgetLoader &loader)
{
    CheckerboardDetectionParameters *params = createParameters();
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
    delete params;
}

void CheckerboardDetectionParametersControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    CheckerboardDetectionParameters *params = createParameters();
    saver.saveParameters(*params, rootPath);
    delete params;
}

 /* Composite fields are NOT supported so far */
void CheckerboardDetectionParametersControlWidget::getParameters(CheckerboardDetectionParameters& params) const
{

    params.setEstimateUndistortedFromDistorted(mUi->estimateUndistortedFromDistortedCheckBox->isChecked());
    params.setUseUndistortion  (mUi->useUndistortionCheckBox->isChecked());
    params.setAlgorithm        (static_cast<CheckerboardDetectionAlgorithm::CheckerboardDetectionAlgorithm>(mUi->algorithmComboBox->currentIndex()));
    params.setChannel          (static_cast<ImageChannel::ImageChannel>(mUi->channelComboBox->currentIndex()));
    params.setCellSizeHor      (mUi->cellSizeHorSpinBox->value());
    params.setCellSizeVert     (mUi->cellSizeVertSpinBox->value());
    params.setCleanExisting    (mUi->cleanExistingCheckBox->isChecked());
    params.setPreciseDiameter  (mUi->preciseDiameterSpinBox->value());
    params.setIterationCount   (mUi->iterationCountSpinBox->value());
    params.setMinAccuracy      (mUi->minAccuracySpinBox->value());
    params.setPartialBoard     (mUi->partialBoardCheckBox->isChecked());
    params.setFastBoardSpeedup (mUi->fastBoardSpeedupCheckBox->isChecked());
    params.setDrawSGFsOnBoards (mUi->drawSGFsOnBoardsCheckBox->isChecked());
    params.setSkipUndistortedWithNoDistortedBoard(mUi->skipUndistortedWithNoDistortedBoardCheckBox->isChecked());

}

CheckerboardDetectionParameters *CheckerboardDetectionParametersControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    CheckerboardDetectionParameters *result = new CheckerboardDetectionParameters(
          mUi->estimateUndistortedFromDistortedCheckBox->isChecked()
        , mUi->useUndistortionCheckBox->isChecked()
        , static_cast<CheckerboardDetectionAlgorithm::CheckerboardDetectionAlgorithm>(mUi->algorithmComboBox->currentIndex())
        , static_cast<ImageChannel::ImageChannel>(mUi->channelComboBox->currentIndex())
        , mUi->cellSizeHorSpinBox->value()
        , mUi->cellSizeVertSpinBox->value()
        , mUi->cleanExistingCheckBox->isChecked()
        , mUi->preciseDiameterSpinBox->value()
        , mUi->iterationCountSpinBox->value()
        , mUi->minAccuracySpinBox->value()
        , mUi->partialBoardCheckBox->isChecked()
        , mUi->fastBoardSpeedupCheckBox->isChecked()
        , mUi->drawSGFsOnBoardsCheckBox->isChecked()
        , mUi->skipUndistortedWithNoDistortedBoardCheckBox->isChecked()
    );
    return result;
}

void CheckerboardDetectionParametersControlWidget::setParameters(const CheckerboardDetectionParameters &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->estimateUndistortedFromDistortedCheckBox->setChecked(input.estimateUndistortedFromDistorted());
    mUi->useUndistortionCheckBox->setChecked(input.useUndistortion());
    mUi->algorithmComboBox->setCurrentIndex(input.algorithm());
    mUi->channelComboBox->setCurrentIndex(input.channel());
    mUi->cellSizeHorSpinBox->setValue(input.cellSizeHor());
    mUi->cellSizeVertSpinBox->setValue(input.cellSizeVert());
    mUi->cleanExistingCheckBox->setChecked(input.cleanExisting());
    mUi->preciseDiameterSpinBox->setValue(input.preciseDiameter());
    mUi->iterationCountSpinBox->setValue(input.iterationCount());
    mUi->minAccuracySpinBox->setValue(input.minAccuracy());
    mUi->partialBoardCheckBox->setChecked(input.partialBoard());
    mUi->fastBoardSpeedupCheckBox->setChecked(input.fastBoardSpeedup());
    mUi->drawSGFsOnBoardsCheckBox->setChecked(input.drawSGFsOnBoards());
    mUi->skipUndistortedWithNoDistortedBoardCheckBox->setChecked(input.skipUndistortedWithNoDistortedBoard());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void CheckerboardDetectionParametersControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    CheckerboardDetectionParameters *inputCasted = static_cast<CheckerboardDetectionParameters *>(input);
    setParameters(*inputCasted);
}
